{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diogo_Ramos\\\\Desktop\\\\book-rest-api-reactjs\\\\src\\\\main\\\\webapp\\\\reactjs\\\\src\\\\components\\\\User\\\\UserList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../../services/index';\nimport './../../assets/css/Style.css';\nimport { Card, Table, InputGroup, FormControl, Button, Alert } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers, faStepBackward, faFastBackward, faStepForward, faFastForward } from '@fortawesome/free-solid-svg-icons';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changePage = event => {\n      this.setState({\n        [event.target.name]: parseInt(event.target.value)\n      });\n    };\n\n    this.firstPage = () => {\n      if (this.state.currentPage > 1) {\n        this.setState({\n          currentPage: 1\n        });\n      }\n    };\n\n    this.prevPage = () => {\n      if (this.state.currentPage > 1) {\n        this.setState({\n          currentPage: this.state.currentPage - 1\n        });\n      }\n    };\n\n    this.lastPage = () => {\n      let usersLength = this.props.userData.users.length;\n\n      if (this.state.currentPage < Math.ceil(usersLength / this.state.usersPerPage)) {\n        this.setState({\n          currentPage: Math.ceil(usersLength / this.state.usersPerPage)\n        });\n      }\n    };\n\n    this.nextPage = () => {\n      if (this.state.currentPage < Math.ceil(this.props.userData.users.length / this.state.usersPerPage)) {\n        this.setState({\n          currentPage: this.state.currentPage + 1\n        });\n      }\n    };\n\n    this.state = {\n      users: [],\n      currentPage: 1,\n      usersPerPage: 5\n    };\n  }\n\n  componentDidMount() {\n    //this.findAllRandomUsers();\n    this.props.fetchUsers();\n  }\n  /*findAllRandomUsers() {\r\n      fetch(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\r\n          .then(response => response.json())\r\n          .then((data) => {\r\n              this.setState({users: data});\r\n          });\r\n  };*/\n\n  /*findAllRandomUsers() {\r\n      axios.get(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\r\n          .then(response => response.data)\r\n          .then((data) => {\r\n              this.setState({users: data});\r\n          });\r\n  };*/\n\n\n  render() {\n    const {\n      currentPage,\n      usersPerPage\n    } = this.state;\n    const lastIndex = currentPage * usersPerPage;\n    const firstIndex = lastIndex - usersPerPage;\n    const userData = this.props.userData;\n    const users = userData.users;\n    const currentUsers = users.slice(firstIndex, lastIndex);\n    const totalPages = users.length / usersPerPage;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, userData.error ? /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, userData.error) : /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 38\n      }\n    }), \" User List\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      striped: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }\n    }, \"Created\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }, \"Balance\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, users.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    }, \"No Users Available\")) : currentUsers.map((user, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 49\n      }\n    }, user.first, ' ', user.last), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, user.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 49\n      }\n    }, user.address), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 49\n      }\n    }, user.created), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 49\n      }\n    }, user.balance)))))), users.length > 0 ? /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, \"Showing Page \", currentPage, \" of \", totalPages), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      disabled: currentPage === 1 ? true : false,\n      onClick: this.firstPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFastBackward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 49\n      }\n    }), \" First\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      disabled: currentPage === 1 ? true : false,\n      onClick: this.prevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStepBackward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 49\n      }\n    }), \" Prev\")), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"page-num bg-dark\",\n      name: \"currentPage\",\n      value: currentPage,\n      onChange: this.changePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      disabled: currentPage === totalPages ? true : false,\n      onClick: this.nextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStepForward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 49\n      }\n    }), \" Next\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      disabled: currentPage === totalPages ? true : false,\n      onClick: this.lastPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFastForward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 49\n      }\n    }), \" Last\"))))) : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","map":{"version":3,"sources":["C:/Users/Diogo_Ramos/Desktop/book-rest-api-reactjs/src/main/webapp/reactjs/src/components/User/UserList.js"],"names":["React","Component","connect","fetchUsers","Card","Table","InputGroup","FormControl","Button","Alert","FontAwesomeIcon","faUsers","faStepBackward","faFastBackward","faStepForward","faFastForward","UserList","constructor","props","changePage","event","setState","target","name","parseInt","value","firstPage","state","currentPage","prevPage","lastPage","usersLength","userData","users","length","Math","ceil","usersPerPage","nextPage","componentDidMount","render","lastIndex","firstIndex","currentUsers","slice","totalPages","error","map","user","index","first","last","email","address","created","balance","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchUsers} from '../../services/index';\r\n\r\nimport './../../assets/css/Style.css';\r\nimport {Card, Table, InputGroup, FormControl, Button, Alert} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faUsers, faStepBackward, faFastBackward, faStepForward, faFastForward} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass UserList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users : [],\r\n            currentPage : 1,\r\n            usersPerPage : 5\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.findAllRandomUsers();\r\n        this.props.fetchUsers();\r\n    }\r\n\r\n    /*findAllRandomUsers() {\r\n        fetch(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                this.setState({users: data});\r\n            });\r\n    };*/\r\n\r\n    /*findAllRandomUsers() {\r\n        axios.get(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({users: data});\r\n            });\r\n    };*/\r\n\r\n    changePage = event => {\r\n        this.setState({\r\n            [event.target.name]: parseInt(event.target.value)\r\n        });\r\n    };\r\n\r\n    firstPage = () => {\r\n        if(this.state.currentPage > 1) {\r\n            this.setState({\r\n                currentPage: 1\r\n            });\r\n        }\r\n    };\r\n\r\n    prevPage = () => {\r\n        if(this.state.currentPage > 1) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage - 1\r\n            });\r\n        }\r\n    };\r\n\r\n    lastPage = () => {\r\n        let usersLength = this.props.userData.users.length;\r\n        if(this.state.currentPage < Math.ceil(usersLength / this.state.usersPerPage)) {\r\n            this.setState({\r\n                currentPage: Math.ceil(usersLength / this.state.usersPerPage)\r\n            });\r\n        }\r\n    };\r\n\r\n    nextPage = () => {\r\n        if(this.state.currentPage < Math.ceil(this.props.userData.users.length / this.state.usersPerPage)) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage + 1\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {currentPage, usersPerPage} = this.state;\r\n        const lastIndex = currentPage * usersPerPage;\r\n        const firstIndex = lastIndex - usersPerPage;\r\n\r\n        const userData = this.props.userData;\r\n        const users = userData.users;\r\n        const currentUsers = users.slice(firstIndex, lastIndex);\r\n        const totalPages = users.length / usersPerPage;\r\n\r\n        return (\r\n            <div>\r\n                {userData.error ?\r\n                    <Alert variant=\"danger\">\r\n                        {userData.error}\r\n                    </Alert> :\r\n                    <Card className={\"border border-dark bg-dark text-white\"}>\r\n                        <Card.Header><FontAwesomeIcon icon={faUsers} /> User List</Card.Header>\r\n                        <Card.Body>\r\n                            <Table bordered hover striped variant=\"dark\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>Name</td>\r\n                                        <td>Email</td>\r\n                                        <td>Address</td>\r\n                                        <td>Created</td>\r\n                                        <td>Balance</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {users.length === 0 ?\r\n                                        <tr align=\"center\">\r\n                                            <td colSpan=\"6\">No Users Available</td>\r\n                                        </tr> :\r\n                                        currentUsers.map((user, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>{user.first}{' '}{user.last}</td>\r\n                                                <td>{user.email}</td>\r\n                                                <td>{user.address}</td>\r\n                                                <td>{user.created}</td>\r\n                                                <td>{user.balance}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                        {users.length > 0 ?\r\n                            <Card.Footer>\r\n                                <div style={{\"float\":\"left\"}}>\r\n                                    Showing Page {currentPage} of {totalPages}\r\n                                </div>\r\n                                <div style={{\"float\":\"right\"}}>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 ? true : false}\r\n                                                onClick={this.firstPage}>\r\n                                                <FontAwesomeIcon icon={faFastBackward} /> First\r\n                                            </Button>\r\n                                            <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 ? true : false}\r\n                                                onClick={this.prevPage}>\r\n                                                <FontAwesomeIcon icon={faStepBackward} /> Prev\r\n                                            </Button>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={\"page-num bg-dark\"} name=\"currentPage\" value={currentPage}\r\n                                            onChange={this.changePage}/>\r\n                                        <InputGroup.Append>\r\n                                            <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalPages ? true : false}\r\n                                                onClick={this.nextPage}>\r\n                                                <FontAwesomeIcon icon={faStepForward} /> Next\r\n                                            </Button>\r\n                                            <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalPages ? true : false}\r\n                                                onClick={this.lastPage}>\r\n                                                <FontAwesomeIcon icon={faFastForward} /> Last\r\n                                            </Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n                                </div>\r\n                            </Card.Footer> : null\r\n                         }\r\n                    </Card>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userData: state.user\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUsers: () => dispatch(fetchUsers())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);"]},"metadata":{},"sourceType":"module"}