{"ast":null,"code":"import { SAVE_BOOK_REQUEST, FETCH_BOOK_REQUEST, UPDATE_BOOK_REQUEST, DELETE_BOOK_REQUEST, BOOK_SUCCESS, BOOK_FAILURE } from \"./bookTypes\";\nimport axios from 'axios';\nexport const saveBook = book => {\n  return dispatch => {\n    dispatch(saveBookRequest());\n    axios.post(\"http://localhost:8081/rest/books\", book).then(response => {\n      dispatch(bookSuccess(response.data));\n    }).catch(error => {\n      dispatch(bookFailure(error));\n    });\n  };\n};\n\nconst saveBookRequest = () => {\n  return {\n    type: SAVE_BOOK_REQUEST\n  };\n};\n\nconst fetchBookRequest = () => {\n  return {\n    type: FETCH_BOOK_REQUEST\n  };\n};\n\nexport const fetchBook = bookId => {\n  return dispatch => {\n    dispatch(fetchBookRequest());\n    axios.get(\"http://localhost:8081/rest/books/\" + bookId).then(response => {\n      dispatch(bookSuccess(response.data));\n    }).catch(error => {\n      dispatch(bookFailure(error));\n    });\n  };\n};\n\nconst updateBookRequest = () => {\n  return {\n    type: UPDATE_BOOK_REQUEST\n  };\n};\n\nexport const updateBook = book => {\n  return dispatch => {\n    dispatch(updateBookRequest());\n    axios.put(\"http://localhost:8081/rest/books\", book).then(response => {\n      dispatch(bookSuccess(response.data));\n    }).catch(error => {\n      dispatch(bookFailure(error));\n    });\n  };\n};\n\nconst deleteBookRequest = () => {\n  return {\n    type: DELETE_BOOK_REQUEST\n  };\n};\n\nexport const deleteBook = bookId => {\n  return dispatch => {\n    dispatch(deleteBookRequest());\n    axios.delete(\"http://localhost:8081/rest/books/\" + bookId).then(response => {\n      dispatch(bookSuccess(response.data));\n    }).catch(error => {\n      dispatch(bookFailure(error));\n    });\n  };\n};\n\nconst bookSuccess = book => {\n  return {\n    type: BOOK_SUCCESS,\n    payload: book\n  };\n};\n\nconst bookFailure = error => {\n  return {\n    type: BOOK_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["C:/Users/Diogo_Ramos/Desktop/book-rest-api-reactjs/src/main/webapp/reactjs/src/services/book/bookActions.js"],"names":["SAVE_BOOK_REQUEST","FETCH_BOOK_REQUEST","UPDATE_BOOK_REQUEST","DELETE_BOOK_REQUEST","BOOK_SUCCESS","BOOK_FAILURE","axios","saveBook","book","dispatch","saveBookRequest","post","then","response","bookSuccess","data","catch","error","bookFailure","type","fetchBookRequest","fetchBook","bookId","get","updateBookRequest","updateBook","put","deleteBookRequest","deleteBook","delete","payload"],"mappings":"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","sourcesContent":["import {SAVE_BOOK_REQUEST, FETCH_BOOK_REQUEST, UPDATE_BOOK_REQUEST, DELETE_BOOK_REQUEST, BOOK_SUCCESS, BOOK_FAILURE} from \"./bookTypes\";\r\nimport axios from 'axios';\r\n\r\nexport const saveBook = book => {\r\n    return dispatch => {\r\n        dispatch(saveBookRequest());\r\n        axios.post(\"http://localhost:8081/rest/books\", book)\r\n            .then(response => {\r\n                dispatch(bookSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(bookFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nconst saveBookRequest = () => {\r\n    return {\r\n        type: SAVE_BOOK_REQUEST\r\n    };\r\n};\r\n\r\nconst fetchBookRequest = () => {\r\n    return {\r\n        type: FETCH_BOOK_REQUEST\r\n    };\r\n};\r\n\r\nexport const fetchBook = bookId => {\r\n    return dispatch => {\r\n        dispatch(fetchBookRequest());\r\n        axios.get(\"http://localhost:8081/rest/books/\"+bookId)\r\n            .then(response => {\r\n                dispatch(bookSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(bookFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nconst updateBookRequest = () => {\r\n    return {\r\n        type: UPDATE_BOOK_REQUEST\r\n    };\r\n};\r\n\r\nexport const updateBook = book => {\r\n    return dispatch => {\r\n        dispatch(updateBookRequest());\r\n        axios.put(\"http://localhost:8081/rest/books\", book)\r\n            .then(response => {\r\n                dispatch(bookSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(bookFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nconst deleteBookRequest = () => {\r\n    return {\r\n        type: DELETE_BOOK_REQUEST\r\n    };\r\n};\r\n\r\nexport const deleteBook = bookId => {\r\n    return dispatch => {\r\n        dispatch(deleteBookRequest());\r\n        axios.delete(\"http://localhost:8081/rest/books/\"+bookId)\r\n            .then(response => {\r\n                dispatch(bookSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(bookFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nconst bookSuccess = book => {\r\n    return {\r\n        type: BOOK_SUCCESS,\r\n        payload: book\r\n    };\r\n};\r\n\r\nconst bookFailure = error => {\r\n    return {\r\n        type: BOOK_FAILURE,\r\n        payload: error\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}